from aiogram.types import (
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton,
)

districts = [
    "Citywalk",
    "Bluewaters",
    "The Palm Jumeirah",
    "Dubai Marina",
    "Business Bay",
    "Downtown",
    "DIFC",
    "ZAABEL + DHCC",
    "Dubai Media City + Dubai Internet City",
    "JLT",
    "JVC",
    "Meydan: Sobha + Azizi Riviera",
    "Dubai Design District + Al Jaddaf",
    "JVT",
    "Creek Harbour",
    "Dubai Production City + Sport City + Motor City",
    "Al Furjan + Discovery Garden",
    "Al Quoz",
    "Al Barsha + Arjan",
]

rooms = ["—Å—Ç—É–¥–∏—è", "1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", "2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", "3-–∫–æ–º–Ω–∞—Ç–Ω–∞—è", "4-–∫–æ–º–Ω–∞—Ç–Ω–∞—è"]

finish_messages = [
    "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! –ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.",
    "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –ú—ã —Å–æ–æ–±—â–∏–º –≤–∞–º, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞–π–¥—ë—Ç—Å—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.",
    "–í–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã! –û–ø–æ–≤–µ—Å—Ç–∏–º –≤–∞—Å, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã.",
    "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤–∏—Ç—Å—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –ø–æ –≤–∞—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.",
    "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã! –ú—ã —Å–æ–æ–±—â–∏–º –≤–∞–º –æ –Ω–æ–≤—ã—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏—è—Ö.",
    "–í–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –¢–µ–ø–µ—Ä—å –º—ã –∏—â–µ–º –∫–≤–∞—Ä—Ç–∏—Ä—É –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –∏ —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞.",
]

inline_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–†–∞–π–æ–Ω", callback_data="button_district")],
        [InlineKeyboardButton(text="–¶–µ–Ω–∞", callback_data="button_price")],
        [InlineKeyboardButton(text="–ö–æ–º–Ω–∞—Ç—ã", callback_data="button_rooms")],
        [InlineKeyboardButton(text="–°—Ä–æ–∫ –∞—Ä–µ–Ω–¥—ã", callback_data="button_period")],
        [InlineKeyboardButton(text="–ú–µ–±–ª–∏—Ä–æ–≤–∫–∞", callback_data="button_furnishing")],
        [InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∫–∞", callback_data="subscription")],
        [InlineKeyboardButton(text="‚ùï–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±–æ—Ä‚ùï", callback_data="button_save")],
        [InlineKeyboardButton(text="–û—Ç—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë", callback_data="button_delete")],
    ]
)

main_menu = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="–í—ã–∑–≤–∞—Ç—å –º–µ–Ω—é")]],
    resize_keyboard=True,
)


def get_subscription_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="1 –¥–µ–Ω—å", callback_data="day")],
            [InlineKeyboardButton(text="1 –Ω–µ–¥–µ–ª—è", callback_data="week")],
            [InlineKeyboardButton(text="1 –º–µ—Å—è—Ü", callback_data="month")],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_main")],
        ]
    )


def get_min_price_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=str(price), callback_data=f"min_{price}")]
            for price in range(0, 40000, 1000)
        ]
        + [[InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]],
    )


def get_max_price_keyboard(min_price):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=str(price), callback_data=f"max_{price}")]
            for price in range(min_price + 1000, 40000, 1000)
        ]
        + [[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]],
    )


def get_count_of_rooms_keyboard(rooms, selected_rooms):
    buttons = []
    for room in rooms:
        text = f"‚úÖ {room}" if room in selected_rooms else room
        buttons.append([InlineKeyboardButton(text=text, callback_data=room)])
    buttons.append([InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="room_done")])
    buttons.append([InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_period_keyboard(selected_periods):
    options = [
        ("–ø–æ–º–µ—Å—è—á–Ω–æ", "monthly"),
        ("–ø–æ—Å—É—Ç–æ—á–Ω–æ", "daily"),
        ("–æ—Ç –≥–æ–¥–∞", "yearly"),
    ]
    buttons = []
    for label, value in options:
        text = f"‚úÖ {label}" if value in selected_periods else label
        buttons.append([InlineKeyboardButton(text=text, callback_data=value)])
    buttons.append([InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="period_done")])
    buttons.append([InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_district_keyboard(districts, selected_districts):
    buttons = []
    for district in districts:
        text = f"‚úÖ {district}" if district in selected_districts else district
        buttons.append([InlineKeyboardButton(text=text, callback_data=district)])
    buttons.append([InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="district_done")])
    buttons.append([InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_furnishing_keyboard(selected_furnishing):
    options = [
        ("–ú–µ–±–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è", "furnished"),
        ("–ù–µ–º–µ–±–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è", "unfurnished"),
    ]
    buttons = []
    for label, value in options:
        text = f"‚úÖ {label}" if value in selected_furnishing else label
        buttons.append([InlineKeyboardButton(text=text, callback_data=value)])
    buttons.append([InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="furnishing_done")])
    buttons.append([InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)
